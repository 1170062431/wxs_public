C51 COMPILER V9.56.0.0   TIMER0                                                            12/27/2021 17:20:29 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\output\timer0.obj
COMPILER INVOKED BY: E:\Keil_v5_BYD\C51\BIN\C51.EXE user\timer0.c COMPACT OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\ls
                    -t\timer0.lst) TABS(2) OBJECT(.\output\timer0.obj)

line level    source

   1          
   2          /*********************************************************************************************************
             -************/
   3          #include "timer0.h"
   4          /*********************************************************************************************************
             -************/
   5          uchar F_1ms,F_1s;
   6          uint T_1ms;
   7          
   8          void TIMER0_ISR (void) interrupt 1     //Ã¿1ms²úÉúÖÐ¶Ï
   9          {
  10   1        static uchar F_IRRec_EN = 0;  //´ý»úÊ±=0£¬ÆðÊ¼Î»µÍµçÆ½Ê±=1£¬ÆðÊ¼Î»¸ßµçÆ½Ê±=2
  11   1        static uchar IRKeyBitNum = 0;
  12   1        static uint IRHighTime = 0;
  13   1        static uchar IRLowTime = 0;
  14   1      //------------------------------
  15   1      //  /*¸ù¾ÝÊµ¼Ê°´¼üÓÐÐ§Î»Êýµ÷Õû*/
  16   1      //  static uchar IRRecBuff = 0;
  17   1      //  static uint IRRecBuff = 0;
  18   1        static ulong IRRecBuff = 0;
  19   1      //------------------------------
  20   1        static unsigned char T_125us = 0;
  21   1        
  22   1        TH0 = TH_VAL0;
  23   1        TL0 = TL_VAL0;
  24   1      
  25   1      //  IO_LED_DAT = !IO_LED_DAT;
  26   1      
  27   1        T_125us++;
  28   1        if(T_125us == 8)
  29   1        {
  30   2          T_125us = 0;
  31   2        
  32   2          F_1ms = 1;
  33   2          T_1ms++;
  34   2          if(T_1ms == 1000)
  35   2          {
  36   3            T_1ms = 0;
  37   3            F_1s = 1;
  38   3          }
  39   2      
  40   2          if(keySta)
  41   2          {
  42   3            if(keySta == keyStaBackup)
  43   3              keyDownTime_ms++;
  44   3            else
  45   3              keyDownTime_ms = 0;
  46   3          }
  47   2          else if(keyDownTime_ms)
  48   2          {
  49   3            keyDownTime_ms = 0;
  50   3            if(++light.mode >= MODE_END)
  51   3              light.mode = MODE_BEGIN+1;
  52   3          }
C51 COMPILER V9.56.0.0   TIMER0                                                            12/27/2021 17:20:29 PAGE 2   

  53   2        }
  54   1        
  55   1        if(light.mic)
  56   1        {
  57   2          if(!IO_MIC_AD)
  58   2          {
  59   3            if(light.mic_ad < LED_NUM)
  60   3              light.mic_ad++;
  61   3          }
  62   2        }
  63   1        else
  64   1          light.mic_ad = 0;
  65   1          
  66   1      //  /*  
  67   1      //  getIRKeyCode();
  68   1      //  /*
  69   1        if(IO_IR_REC && IRHighTime<5000)  //¶Á¸ßµçÆ½Ê±¼ä
  70   1        {
  71   2          IRHighTime++;
  72   2          if(IRHighTime > 2)
  73   2          {
  74   3            if (IRLowTime >= SET_IR_START_L_TIME_MIN_125US)
  75   3            {
  76   4              IRRecBuff = 0;
  77   4              IRKeyBitNum = 0;
  78   4              F_IRRec_EN = 1;
  79   4            }
  80   3            IRLowTime = 0;
  81   3          }
  82   2          if(IRHighTime > SET_IR_DATA2DATA_TIME_125US+20)
  83   2          {
  84   3            F_IRRec_EN = 0;
  85   3            keyCode = IRKEY_NON;
  86   3          }
  87   2          return;
  88   2        }
  89   1        
  90   1        else if(!IO_IR_REC && IRLowTime<200)
  91   1        {
  92   2          IRLowTime++;
  93   2          if(F_IRRec_EN)
  94   2          {
  95   3            if(IRLowTime == 2)  //Ö»ÔÚÉè¶¨ÖµÖ´ÐÐÒ»´Î£¬ÔÚ·¶Î§ÄÚÖµÔ½´ó¿¹¸ÉÈÅÔ½ºÃ
  96   3            {
  97   4              if(F_IRRec_EN == 1)
  98   4              {
  99   5                if((SET_IR_START_H_TIME_MIN_125US<=IRHighTime) && (IRHighTime<=SET_IR_START_H_TIME_MAX_125US))  //Õý³£
             -Âë
 100   5                {
 101   6                  F_IRRec_EN = 2;
 102   6                  IRHighTime = 0;
 103   6                  return;
 104   6                }
 105   5                else //if((SET_IR_LXM_H_TIME_MIN_125US<=IRHighTime) && (IRHighTime<=SET_IR_LXM_H_TIME_MAX_125US)) //Á
             -¬ÐøÂë
 106   5                {
 107   6                  IRHighTime = 0;
 108   6                  return;
 109   6                }
 110   5              }
 111   4              else if(F_IRRec_EN == 2)
 112   4              {
C51 COMPILER V9.56.0.0   TIMER0                                                            12/27/2021 17:20:29 PAGE 3   

 113   5                if(IRKeyBitNum < SET_IR_REC_BIT_MAX)
 114   5                  IRKeyBitNum++;
 115   5                if(SET_IR_REC_DATA_START_BIT<=IRKeyBitNum && IRKeyBitNum<=SET_IR_REC_DATA_STOP_BIT)
 116   5                {
 117   6                  if(SET_IR_DATA_0_H_TIME_MIN_125US<=IRHighTime && IRHighTime<=SET_IR_DATA_0_H_TIME_MAX_125US)
 118   6                  { 
 119   7                    IRRecBuff = IRRecBuff<<1;
 120   7                    IRHighTime = 0;
 121   7                  }
 122   6                  else if(SET_IR_DATA_1_H_TIME_MIN_125US<=IRHighTime && IRHighTime<=SET_IR_DATA_1_H_TIME_MAX_125US)
 123   6                  {
 124   7                    IRRecBuff = (IRRecBuff<<1)|1;
 125   7                    IRHighTime = 0;
 126   7                  }
 127   6                  else
 128   6                  {
 129   7                  //  IRRecBuff = 0;
 130   7                  //  IRKeyBitNum = 0;
 131   7                  //  F_IRRec_EN = 0;
 132   7                    IRKeyBitNum--;
 133   7                    return;
 134   7                  }
 135   6                  if(IRKeyBitNum == SET_IR_REC_DATA_STOP_BIT)   //½ÓÊÕÍêÓÐÐ§Î»Êý
 136   6                  {
 137   7                    if((IRRecBuff>>16 == IRKEY_HEAD)&&((IRRecBuff+(IRRecBuff>>8))&0xFF == 0xFF))
 138   7                    {
 139   8                      IRRecBuff = userIrCodeChange((u16)IRRecBuff);
 140   8                      keyCode = IRRecBuff&0xFF;
 141   8                      /* //
 142   8                      switch(IRRecBuff)
 143   8                      {
 144   8                      //YK_IR
 145   8                      case IRKEY_light_add:
 146   8                      case IRKEY_light_dec:
 147   8                      case IRKEY_off:
 148   8                      case IRKEY_on:
 149   8                      case IRKEY_r:
 150   8                      case IRKEY_g:
 151   8                      case IRKEY_b:
 152   8                      case IRKEY_w:
 153   8                      case IRKEY_r_1:
 154   8                      case IRKEY_g_1:
 155   8                      case IRKEY_b_1:
 156   8                      case IRKEY_flash:
 157   8                      case IRKEY_r_2:
 158   8                      case IRKEY_g_2:
 159   8                      case IRKEY_b_2:
 160   8                      case IRKEY_strobe:
 161   8                      case IRKEY_r_3:
 162   8                      case IRKEY_g_3:
 163   8                      case IRKEY_b_3:
 164   8                      case IRKEY_fade:
 165   8                      case IRKEY_r_4:
 166   8                      case IRKEY_g_4:
 167   8                      case IRKEY_b_4:
 168   8                      case IRKEY_smooth:
 169   8                      //  keyCode = IRRecBuff;
 170   8                        break;
 171   8                      default:break;
 172   8                      }
 173   8                    //  */
 174   8                    }
C51 COMPILER V9.56.0.0   TIMER0                                                            12/27/2021 17:20:29 PAGE 4   

 175   7                //  Uart0_PutChar(IRRecBuff);
 176   7                  }
 177   6                }
 178   5                else
 179   5                  IRHighTime = 0;
 180   5              }
 181   4            }
 182   3          }
 183   2          else
 184   2            IRHighTime = 0;
 185   2        }
 186   1      //  */
 187   1      }
 188          void timer0_init(void)
 189          { 
 190   1        TMOD = (TMOD&0xFC)|0x00;  //Ä£Ê½Ñ¡Ôñ: ¶¨Ê±Æ÷0£¬Ä£Ê½0
 191   1        TH0 = TH_VAL0;          //¸ß8Î»×°³õÖµ
 192   1        TL0 = TL_VAL0;          //µÍ8Î»×°³õÖµ
 193   1        
 194   1        TR0 = 1;       //¶¨Ê±Æ÷0Ê¹ÄÜ  
 195   1        ET0 = 1;       //¶¨Ê±Æ÷0ÖÐ¶ÏÊ¹ÄÜ
 196   1        PT0 = 0;       //ÉèÖÃ¶¨Ê±Æ÷0ÖÐ¶ÏÓÅÏÈ¼¶ÎªµÍÓÅÏÈ¼¶
 197   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    720    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     14    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
